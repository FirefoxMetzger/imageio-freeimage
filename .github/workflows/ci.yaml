name: CI

# This action runs through ImageIO's continous integration pipeline. It
# performs the following checks:
# 
# - Linting/Style (Black)
# - Invokes the unit tests in no-internet mode on python 3.8
# - runs unit test on cypthon in matrix mode (python 3.X) x (3 major OS)
# - runs unit tests on pypy in matrix mode (pypy 3.X) x (3 major OS)


on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  style:
    name: "Linting"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: psf/black@20.8b1
        with:
          args: ". --check"
      - name: Install Dependencies
        shell: bash
        run: |
            pip install black flake8
      - name: Flake8
        uses: liskin/gh-problem-matcher-wrap@v1
        with:
          linters: flake8
          run: flake8 .

  cpython:
    name: "${{ matrix.os }} / CPython ${{ matrix.pyversion }}"
    runs-on: ${{ matrix.os }}
    strategy:
      # fail-fast: true
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        pyversion: ["3.7", "3.8", "3.9", "3.10"]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Set up Python ${{ matrix.pyversion }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pyversion }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install Project
        shell: bash
        run: |
          poetry install --no-interaction
      - name: Run Tests
        run: |
          source $VENV
          pytest -v --github-username "anything" --github-token ${{ secrets.GITHUB_TOKEN }}
      # - name: Run All Unit tests
      #   run: |
      #       coverage run -m pytest -v --github-username "anything" --github-token ${{ secrets.GITHUB_TOKEN }}
      # - name: Upload coverage to Codecov
      #   run: |
      #       curl -s https://codecov.io/bash | bash
      #   shell: bash

  pypy:
    name: "${{ matrix.os }} / ${{ matrix.pyversion }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        pyversion: ["pypy-3.7", "pypy-3.8", "pypy-3.9"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up pypy
        uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.pyversion }}"
      - name: MacOS Numpy Fix
        if: runner.os == 'macOS'
        run: |
            brew install openblas
            OPENBLAS="$(brew --prefix openblas)" pypy3 -m pip install numpy
      - name: Install dependencies
        shell: bash
        run: |
            pypy3 -m pip install .[test,all-plugins-pypy]
      - name: Run Unit tests
        run: |
            pytest -v --github-username "anything" --github-token ${{ secrets.GITHUB_TOKEN }}
